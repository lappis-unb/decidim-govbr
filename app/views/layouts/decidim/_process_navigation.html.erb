<%
  components = participatory_space.components.published.or(Decidim::Component.where(id: self.try(:current_component)))
%>
<%=
  # Criação da lista de itens
  items = ([
    {
      name: t(".process_menu_item"),
      url: decidim_participatory_processes.participatory_process_path(participatory_space),
      active: is_active_link?(decidim_participatory_processes.participatory_process_path(participatory_space), :exclusive) ||
              is_active_link?(decidim_participatory_processes.all_metrics_participatory_process_path(participatory_space), :exclusive)
    }
  ] + components.filter{ |c| !c.hide_in_menu }.map do |component|
    {
      name: translated_attribute(component.name),
      url: main_component_path(component),
      active: is_active_link?(main_component_path(component), :inclusive),
      menu_name: translated_attribute(component.menu_name) != "" ? translated_attribute(component.menu_name) : translated_attribute(component.name)
    }
  end + [
    current_participatory_space.attachments.any? || current_participatory_space.media_links.any? ? {
      name: participatory_space.mobilization_title,
      url: decidim_participatory_processes.participatory_process_media_path(current_participatory_space),
      active: is_active_link?(decidim_participatory_processes.participatory_process_media_path(current_participatory_space), :inclusive)
    } : nil
  ]).compact

  mobilization_item = items.find { |item| item[:name] == participatory_space.mobilization_title }

  if mobilization_item
    items.delete(mobilization_item)
    
    position = participatory_space.mobilization_position.to_i
    position = 1 if position < 1

    items.insert(position, mobilization_item)
  end

  extended_navigation_bar(items)
%>
